"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[942],{2942:function(e,n,r){r.r(n),r.d(n,{isWeb3Injected:function(){return v},unwrapBytes:function(){return w},web3Accounts:function(){return $},web3AccountsSubscribe:function(){return S},web3Enable:function(){return P},web3EnablePromise:function(){return O},web3FromAddress:function(){return A},web3FromSource:function(){return F},web3ListRpcProviders:function(){return k},web3UseRpcProvider:function(){return Y},wrapBytes:function(){return m}});var t=r(4942),o=r(5442),s=r(6986),c=r(4248);var i=r(5716),a=r(3836);const u=(0,i.Y)("\x19Ethereum Signed Message:\n"),b=(0,i.Y)("<Bytes>"),l=(0,i.Y)("</Bytes>"),f=b.length+l.length;function d(e,n){return e.length>=f&&(0,o.S)(e.subarray(0,b.length),b)&&(0,o.S)(e.slice(-l.length),l)||n&&e.length>=u.length&&(0,o.S)(e.subarray(0,u.length),u)}function w(e){const n=(0,i.Y)(e);return d(n,!1)?n.subarray(b.length,n.length-l.length):n}function m(e){const n=(0,i.Y)(e);return d(n,!0)?n:(0,a.e)(b,n,l)}function h(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?h(Object(r),!0).forEach((function(n){(0,t.Z)(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):h(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}const g=window;function y(){return 0!==Object.keys(g.injectedWeb3).length}function j(e){throw new Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function E(e,n,r){return n.map((({address:n,genesisHash:t,name:o})=>({address:(0,s.m)((0,c.m)(n),r),meta:{genesisHash:t,name:o,source:e}})))}g.injectedWeb3=g.injectedWeb3||{};let v=y(),O=null;function P(e){if(!e)throw new Error("You must pass a name for your app to the web3Enable function");var n;return n=()=>function(e){return Promise.all(Object.entries(g.injectedWeb3).map((([n,{enable:r,version:t}])=>Promise.all([Promise.resolve({name:n,version:t}),r(e).catch((e=>{console.error(`Error initializing ${n}: ${e.message}`)}))]))))}(e).then((e=>e.filter((e=>!!e[1])).map((([e,n])=>(n.accounts.subscribe||(n.accounts.subscribe=e=>(n.accounts.get().then(e).catch(console.error),()=>{})),p(p({},e),n)))))).catch((()=>[])).then((e=>{const n=e.map((({name:e,version:n})=>`${e}/${n}`));return v=y(),console.log(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${n.join(", ")}`),e})),O=new Promise((e=>{"complete"===document.readyState?e(n()):window.addEventListener("load",(()=>e(n())))})),O}async function $({ss58Format:e}={}){if(!O)return j("web3Accounts");const n=[],r=await O;(await Promise.all(r.map((async({accounts:n,name:r})=>{try{return E(r,await n.get(),e)}catch(t){return[]}})))).forEach((e=>{n.push(...e)}));const t=n.map((({address:e})=>e));return console.log(`web3Accounts: Found ${n.length} address${1!==n.length?"es":""}: ${t.join(", ")}`),n}async function S(e,{ss58Format:n}={}){if(!O)return j("web3AccountsSubscribe");const r={},t=(await O).map((({accounts:{subscribe:t},name:o})=>t((t=>{r[o]=t,e(Object.entries(r).reduce(((e,[r,t])=>(e.push(...E(r,t,n)),e)),[]))}))));return()=>{t.forEach((e=>{e()}))}}async function F(e){if(!O)return j("web3FromSource");const n=await O,r=e&&n.find((({name:n})=>n===e));if(!r)throw new Error(`web3FromSource: Unable to find an injected ${e}`);return r}async function A(e){if(!O)return j("web3FromAddress");const n=await $();let r;if(e){const t=(0,c.m)(e);r=n.find((e=>(0,o.S)((0,c.m)(e.address),t)))}if(!r)throw new Error(`web3FromAddress: Unable to find injected ${e}`);return F(r.meta.source)}async function k(e){const{provider:n}=await F(e);return n?n.listProviders():(console.warn(`Extension ${e} does not expose any provider`),null)}async function Y(e,n){const{provider:r}=await F(e);if(!r)throw new Error(`Extension ${e} does not expose any provider`);return{meta:await r.startProvider(n),provider:r}}}}]);